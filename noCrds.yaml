apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    config.kubernetes.io/origin: 'path: ../rbac/service_account.yaml

      '
  name: formance-operator-controller-manager
  namespace: formance-operator

---
apiVersion: v1
data:
  controller_manager_config.yaml: "apiVersion: controller-runtime.sigs.k8s.io/v1alpha1\n\
    kind: ControllerManagerConfig\nhealth:\n  healthProbeBindAddress: :8081\nmetrics:\n\
    \  bindAddress: 127.0.0.1:8080\nwebhook:\n  port: 9443\nleaderElection:\n  leaderElect:\
    \ true\n  resourceName: 68fe8eef.formance.com\n# leaderElectionReleaseOnCancel\
    \ defines if the leader should step down volume\n# when the Manager ends. This\
    \ requires the binary to immediately end when the\n# Manager is stopped, otherwise,\
    \ this setting is unsafe. Setting this significantly\n# speeds up voluntary leader\
    \ transitions as the new leader don't have to wait\n# LeaseDuration time first.\n\
    # In the default scaffold provided, the program ends immediately after\n# the\
    \ manager stops, so would be fine to enable this option. However,\n# if you are\
    \ doing or is intended to do any operation such as perform cleanups\n# after the\
    \ manager stops then its usage might be unsafe.\n# leaderElectionReleaseOnCancel:\
    \ true\n"
kind: ConfigMap
metadata:
  annotations:
    config.kubernetes.io/origin: "configuredIn: ../manager/kustomization.yaml\nconfiguredBy:\n\
      \  apiVersion: builtin\n  kind: ConfigMapGenerator\n"
  name: formance-operator-manager-config
  namespace: formance-operator

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    config.kubernetes.io/origin: 'path: ../rbac/role.yaml

      '
  creationTimestamp: null
  name: formance-operator-manager-role
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ''
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ''
  resources:
  - namespaces
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ''
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ''
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - stack.formance.com
  resources:
  - configurations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - stack.formance.com
  resources:
  - stacks
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - stack.formance.com
  resources:
  - stacks/finalizers
  verbs:
  - update
- apiGroups:
  - stack.formance.com
  resources:
  - stacks/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - stack.formance.com
  resources:
  - versions
  verbs:
  - get
  - list
  - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    config.kubernetes.io/origin: 'path: ../rbac/auth_proxy_client_clusterrole.yaml

      '
  name: formance-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    config.kubernetes.io/origin: 'path: ../rbac/auth_proxy_role.yaml

      '
  name: formance-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    config.kubernetes.io/origin: 'path: ../rbac/role_binding.yaml

      '
  name: formance-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: formance-operator-manager-role
subjects:
- kind: ServiceAccount
  name: formance-operator-controller-manager
  namespace: formance-operator

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    config.kubernetes.io/origin: 'path: ../rbac/auth_proxy_role_binding.yaml

      '
  name: formance-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: formance-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: formance-operator-controller-manager
  namespace: formance-operator

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    config.kubernetes.io/origin: 'path: ../rbac/leader_election_role.yaml

      '
  name: formance-operator-leader-election-role
  namespace: formance-operator
rules:
- apiGroups:
  - ''
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ''
  resources:
  - events
  verbs:
  - create
  - patch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    config.kubernetes.io/origin: 'path: ../rbac/leader_election_role_binding.yaml

      '
  name: formance-operator-leader-election-rolebinding
  namespace: formance-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: formance-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: formance-operator-controller-manager
  namespace: formance-operator

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    config.kubernetes.io/origin: 'path: ../rbac/auth_proxy_service.yaml

      '
  labels:
    control-plane: controller-manager
  name: formance-operator-controller-manager-metrics-service
  namespace: formance-operator
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    config.kubernetes.io/origin: 'path: ../webhook/service.yaml

      '
  name: formance-operator-webhook-service
  namespace: formance-operator
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v0.9.1
    control-plane: controller-manager
    helm.sh/chart: operator-0.0.1
  name: release-name-operator
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: operator
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/name: operator
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-bind-address=:8080
        - --health-probe-bind-address=:8081
        - --leader-elect
        - --env=staging
        - --region=eu-west-1
        command:
        - /usr/bin/operator
        image: ghcr.io/formancehq/operator:v0.9.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: operator
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.12.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext: {}
      serviceAccountName: formance-operator-controller-manager
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    config.kubernetes.io/origin: 'path: ../certmanager/certificate.yaml

      '
  name: formance-operator-serving-cert
  namespace: formance-operator
spec:
  dnsNames:
  - formance-operator-webhook-service.formance-operator.svc
  - formance-operator-webhook-service.formance-operator.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: formance-operator-selfsigned-issuer
  secretName: webhook-server-cert

---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    config.kubernetes.io/origin: 'path: ../certmanager/certificate.yaml

      '
  name: formance-operator-selfsigned-issuer
  namespace: formance-operator
spec:
  selfSigned: {}

---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: formance-operator/formance-operator-serving-cert
    config.kubernetes.io/origin: 'path: ../webhook/manifests.yaml

      '
  name: formance-operator-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: formance-operator-webhook-service
      namespace: formance-operator
      path: /mutate-stack-formance-com-v1beta3-configuration
  failurePolicy: Fail
  name: mconfiguration.kb.io
  rules:
  - apiGroups:
    - stack.formance.com
    apiVersions:
    - v1beta3
    operations:
    - CREATE
    - UPDATE
    resources:
    - configurations
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: formance-operator-webhook-service
      namespace: formance-operator
      path: /mutate-stack-formance-com-v1beta3-stack
  failurePolicy: Fail
  name: mstacks-v1beta3.kb.io
  rules:
  - apiGroups:
    - stack.formance.com
    apiVersions:
    - v1beta3
    operations:
    - CREATE
    - UPDATE
    resources:
    - stacks
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: formance-operator-webhook-service
      namespace: formance-operator
      path: /mutate-stack-formance-com-v1beta2-stack
  failurePolicy: Fail
  name: mstacks-v1beta2.kb.io
  rules:
  - apiGroups:
    - stack.formance.com
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - stacks
  sideEffects: None

---
